---
import Emoji from "astro-emoji";
import { links } from "../../const";
import { Icon } from "astro-icon";

const { class: classNames, ...rest } = Astro.props;
const baseImageDimension = 256;
const cvLink = links.cv;
---

<section {...rest} class="about">
  <section class="intro">
    <h1>
      Hi <Emoji symbol="ðŸ‘‹" label="Hi" />, <br />My name is <br /><span class="text-gradient">Roman Rolgin</span><br />
    </h1><h2>I build web apps</h2>
  </section>
  <section class="photo">
    <div class="border">
      <img
        class="profile-photo"
        alt="Roman Rolgin photo"
        width={baseImageDimension - 14}
        height={baseImageDimension - 14}
        src="avatar-photo-sq.jpg"
      />
    </div>
  </section>
  <a
    class="cv"
    href={cvLink}
    rel="noopener nofollow noreferrer"
    aria-label="Download Roman Rolgin's CV"
    role="link"
    target="_blank"
  >
    <Icon width="1.3em" height="1.3em" name="mdi:account-arrow-down-outline" />
    Download CV
  </a>
</section>
<style lang="scss">
  @use "styles.scss" as utils;

  .text-gradient {
    --accent-gradient: linear-gradient(
      45deg,
      #{utils.color(accent)},
      #{utils.color(main)} 30%,
      #{utils.color(light)} 60%
    );
    @include utils.applyTextGradient(var(--accent-gradient));
  }

  .about {
    display: grid;
    grid-template-areas: "intro photo" "cv photo";
    grid-template-columns: repeat(2, 1fr);
    grid-template-rows: 1fr 3em;
    row-gap: 0;
    column-gap: 32px;
    @include utils.contentMaxWidth();
    // padding: 1rem 0 2rem;
    height: calc(100vh - var(--header-height));
    transform: translateY(calc(var(--header-height) * -1));

    @include utils.tablet {
      // grid-template-columns: 1fr;
      // grid-temlate-rows: unset;
      // grid-template-areas: "intro" "photo" "cv";
      display: flex;
      justify-content: space-evenly;
      transform: none;
    }

    @include utils.mobile {
      // display: block;
    }
  }

  h1 {
    margin: 0;
    @include utils.font(heading, xl);
    color: utils.text-color(main);
  }

  h2 {
    margin: 0.3em 0 0;
    @include utils.font(heading, xl);
    color: utils.text-color(secondary);
  }

  section {
    display: flex;
    flex-direction: column;
    justify-content: center;
  }

  .photo {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: flex-end;
    user-select: none;
    pointer-events: none;

    @include utils.tablet {
      justify-content: flex-start;
    }
  }

  .border {
    display: flex;
    align-items: center;
    justify-content: center;
    background-image: linear-gradient(
      calc(1080deg * var(--scroll, 1/360)),
      #{utils.color(secondary)} 0%,
      #{utils.color(main)} 30%,
      #{utils.color(accent)} 60%
    );
    width: clamp(180px, 60vw, 256px);
    min-width: clamp(180px, 60vw, 256px);
    height: clamp(180px, 60vw, 256px);
    border-radius: 50%;
  }

  .profile-photo {
    border-radius: 50%;
    object-fit: cover;
    object-position: center 25%;
    aspect-ratio: 1/1;
    width: 95%;
    height: 95%;
  }

  .cv {
    display: flex;
    align-items: flex-end;
    width: max-content;
    gap: 8px;
    padding: 0.7em;
    color: utils.text-color(secondary);
    @include utils.font(caption, m);
    line-height: 20px;
    background-color: transparent; // utils.color(light);
    box-shadow: 0 1px 0px 0 utils.color(dark);
    border-top-left-radius: 12px;
    border-top-right-radius: 12px;

    @include utils.skipIfNoMotionPrefered() {
      transition: all 0.2s cubic-bezier(0.43, 0.73, 0.81, 0.89);
    }

    &:hover {
      color: utils.text-color(secondary-hover);
      fill: utils.color(accent);
      @include utils.skipIfNoMotionPrefered() {
        box-shadow: 0 1px 1px 0 utils.color(dark);
        border-radius: 12px;
      }
    }
  }
</style>
