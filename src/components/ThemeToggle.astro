---
const { class: classNames } = Astro.props;
---

<label aria-label="Toggle dark mode" class:list={["toggleLabel", classNames]}>
  <svg class="sun" width="30px" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 256 256">
    <path
      d="M120 40V16a8 8 0 0 1 16 0v24a8 8 0 0 1-16 0Zm8 24a64 64 0 1 0 64 64a64.07 64.07 0 0 0-64-64Zm-69.66 5.66a8 8 0 0 0 11.32-11.32l-16-16a8 8 0 0 0-11.32 11.32Zm0 116.68l-16 16a8 8 0 0 0 11.32 11.32l16-16a8 8 0 0 0-11.32-11.32ZM192 72a8 8 0 0 0 5.66-2.34l16-16a8 8 0 0 0-11.32-11.32l-16 16A8 8 0 0 0 192 72Zm5.66 114.34a8 8 0 0 0-11.32 11.32l16 16a8 8 0 0 0 11.32-11.32ZM48 128a8 8 0 0 0-8-8H16a8 8 0 0 0 0 16h24a8 8 0 0 0 8-8Zm80 80a8 8 0 0 0-8 8v24a8 8 0 0 0 16 0v-24a8 8 0 0 0-8-8Zm112-88h-24a8 8 0 0 0 0 16h24a8 8 0 0 0 0-16Z"
    ></path>
  </svg>
  <svg class="moon" width="30px" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 256 256">
    <path
      d="M240 96a8 8 0 0 1-8 8h-16v16a8 8 0 0 1-16 0v-16h-16a8 8 0 0 1 0-16h16V72a8 8 0 0 1 16 0v16h16a8 8 0 0 1 8 8Zm-96-40h8v8a8 8 0 0 0 16 0v-8h8a8 8 0 0 0 0-16h-8v-8a8 8 0 0 0-16 0v8h-8a8 8 0 0 0 0 16Zm65.14 94.33A88.07 88.07 0 0 1 105.67 46.86a8 8 0 0 0-10.6-9.06A96 96 0 1 0 218.2 160.93a8 8 0 0 0-9.06-10.6Z"
    ></path>
  </svg>
  <input type="checkbox" class="themeToggle" />
  <span class="checkmark"></span>
</label>

<style lang="scss">
  @use "styles.scss" as *;

  label {
    --label-width: 2.5rem;
    --label-height: 1rem;

    @media (hover: none) {
      --label-width: 3rem;
      --label-height: 1.5rem;
    }

    --light-bg: rgb(61, 189, 225);
    --dark-bg: rgb(22, 25, 78);
    --indicator-fill: rgb(241, 231, 36);

    box-sizing: content-box;
    display: flex;
    position: relative;
    align-items: center;
    width: var(--label-width);
    height: var(--label-height);
    padding: 4px;
    border-radius: 30px;
    cursor: pointer;
    background-color: var(--light-bg);

    @include skipIfNoMotionPrefered() {
      transition: background-color 0.5s cubic-bezier(0.37, 0.49, 0.26, 1.46);
    }

    &:not(.anim) {
      transition: none;
    }

    &:focus-visible,
    &:focus-within {
      box-shadow: 0 0 0 2px color(accent);
    }

    :global(.dark) & {
      background-color: var(--dark-bg);
    }

    & input {
      opacity: 0;
      position: absolute;
      z-index: -1;
    }
  }

  .checkmark {
    display: block;
    width: var(--label-height);
    height: var(--label-height);
    border-radius: 50%;
    background-color: white;
    transform: translateX(15%);
    box-shadow: inset -1px 0px 0 1px var(--indicator-fill);

    @include skipIfNoMotionPrefered() {
      transition: transform 0.5s cubic-bezier(0.37, 0.49, 0.26, 1.46),
        box-shadow 0.3s cubic-bezier(0.215, 0.61, 0.355, 1);
    }

    input:checked ~ & {
      transform: translateX(calc(var(--label-width) - 115%));
      box-shadow: inset 1px 0px 0 1px var(--indicator-fill);
    }

    .toggleLabel:not(.anim) input ~ & {
      transition: none;
    }
  }

  .sun,
  .moon {
    position: absolute;
    width: 14px;
    height: 14px;
    fill: var(--indicator-fill);

    @include skipIfNoMotionPrefered() {
      transition: all 0.5s cubic-bezier(0.37, 0.49, 0.26, 1.46);
    }

    .toggleLabel:not(.anim) & {
      transition: none;
    }
  }

  .sun {
    right: 4px;
    transform: translateX(-30%);

    :global(html:not(.dark)) & {
      transform: scale(0.8) translateX(-50%);
    }
  }

  .moon {
    left: 0;
    transform: translateX(30%);

    :global(.dark) & {
      transform: scale(0.8) translateX(50%);
    }
  }
</style>

<script>
  import "@/scripts/theme-toggle.service.ts";
  window.addEventListener("load", () => {
    setTimeout(() => document.querySelector(".toggleLabel")?.classList.add("anim"));
  });
</script>
