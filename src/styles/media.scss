@use "sass:map";

$breakpoints: (
  s: (
    minWidth: null,
    maxWidth: 420px,
  ),
  m: (
    minWidth: 421px,
    maxWidth: 914px,
  ),
  l: (
    minWidth: 915px,
    maxWidth: null,
  ),
);

@function _getBreakpoint($size) {
  $breakpoint: map.get($breakpoints, $size);
  @if ($breakpoint == null) {
    @error "`#{$size}` isn't a valid key for breakpoints mixin`";
  }
  @return $breakpoint;
}

@mixin breakpoint($size) {
  $breakpoint: _getBreakpoint($size);
  $minWidth: map.get($breakpoint, minWidth);
  $maxWidth: map.get($breakpoint, maxWidth);

  @if ($minWidth != null and $maxWidth != null) {
    @media (min-width: $minWidth) and (max-width: $maxWidth) {
      @content;
    }
  } @else if ($maxWidth != null) {
    @media (max-width: $maxWidth) {
      @content;
    }
  } @else if ($minWidth != null) {
    @media (min-width: $minWidth) {
      @content;
    }
  }
}

@mixin mediaBreakpointAfter($size) {
  $breakpoint: _getBreakpoint($size);
  $maxWidth: map.get($breakpoint, maxWidth);

  @if ($maxWidth != null) {
    @media (min-width: #{$maxWidth + 1}) {
      @content;
    }
  }
}

@mixin mediaBreakpointBefore($size) {
  $breakpoint: _getBreakpoint($size);
  $minWidth: map.get($breakpoint, minWidth);

  @if ($minWidth != null) {
    @media (max-width: #{$minWidth - 1}) {
      @content;
    }
  }
}

@mixin mediaBreakpointBetween($sizeA, $sizeB) {
  $breakpointA: _getBreakpoint($sizeA);
  $breakpointB: _getBreakpoint($sizeB);

  $minWidth: map.get($breakpointA, minWidth);
  $maxWidth: map.get($breakpointB, maxWidth);

  @if ($minWidth != null and $maxWidth != null) {
    @media (min-width: $minWidth) and (max-width: $maxWidth) {
      @content;
    }
  }
}

@mixin mediaBreakpoint($size) {
  $breakpoint: _getBreakpoint($size);
  $minWidth: map.get($breakpoint, minWidth);
  $maxWidth: map.get($breakpoint, maxWidth);

  @if ($minWidth != null and $maxWidth != null) {
    @media (min-width: $minWidth) and (max-width: $maxWidth) {
      @content;
    }
  } @else if ($maxWidth != null) {
    @media (max-width: $maxWidth) {
      @content;
    }
  } @else if ($minWidth != null) {
    @media (min-width: $minWidth) {
      @content;
    }
  }
}

@mixin mobile {
  @include mediaBreakpointBefore(m) {
    @content;
  }
}

@mixin tablet {
  @include mediaBreakpointBefore(l) {
    @content;
  }
}
